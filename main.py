import os
import time
from datetime import datetime
import openai
import telebot
import schedule
from dotenv import load_dotenv

load_dotenv()

OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
TG_BOT_TOKEN = os.getenv('TG_BOT_TOKEN')
CHANNEL_ID = os.getenv('CHANNEL_ID')
POST_TIME = os.getenv('POST_TIME', "08:00")

openai.api_key = OPENAI_API_KEY
bot = telebot.TeleBot(TG_BOT_TOKEN)

ZODIAC_SIGNS = [
    '–û–≤–µ–Ω', '–¢–µ–ª–µ—Ü', '–ë–ª–∏–∑–Ω–µ—Ü—ã', '–†–∞–∫', '–õ–µ–≤', '–î–µ–≤–∞',
    '–í–µ—Å—ã', '–°–∫–æ—Ä–ø–∏–æ–Ω', '–°—Ç—Ä–µ–ª–µ—Ü', '–ö–æ–∑–µ—Ä–æ–≥', '–í–æ–¥–æ–ª–µ–π', '–†—ã–±—ã'
]

def get_astro_forecast(sign):
    prompt = (
        f"–ù–∞–ø–∏—à–∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 24 —á–∞—Å–∞ –¥–ª—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ {sign}. "
        "–ü—Ä–æ–≥–Ω–æ–∑ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º, –±–µ–∑ –ø–æ–ª–∏—Ç–∏–∫–∏ –∏ –Ω–µ–≥–∞—Ç–∏–≤–∞. "
        "–î–æ–±–∞–≤—å —ç–º–æ–¥–∑–∏ –ø–æ —Ç–µ–º–µ. –ù–µ —É–ø–æ–º–∏–Ω–∞–π –¥–∞—Ç—É –∏ –Ω–µ –¥—É–±–ª–∏—Ä—É–π —Ç–µ–∫—Å—Ç –∏–∑ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤."
    )
    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7,
        max_tokens=180,
    )
    return response.choices[0].message.content.strip()

def send_daily_forecasts():
    today = datetime.now().strftime('%d.%m.%Y')
    header = f"üåü –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 24 —á–∞—Å–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ ({today}):"
    bot.send_message(CHANNEL_ID, header)
    time.sleep(1)
    for sign in ZODIAC_SIGNS:
        try:
            forecast = get_astro_forecast(sign)
            post = f"**{sign}**\n{forecast}"
            bot.send_message(CHANNEL_ID, post, parse_mode="Markdown")
            print(f"{datetime.now()}: {sign} ‚Äî –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            time.sleep(3)  # —á—Ç–æ–±—ã –Ω–µ –∑–∞–±–∞–Ω–∏–ª–∏ –∑–∞ —Å–ø–∞–º
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {sign}: {e}")

def job():
    print(f"{datetime.now()}: –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∞—Å—Ç—Ä–æ–ø—Ä–æ–≥–Ω–æ–∑–æ–≤")
    send_daily_forecasts()

if __name__ == '__main__':
    schedule.every().day.at(POST_TIME).do(job)
    print("–ê—Å—Ç—Ä–æ-–±–æ—Ç –∞–≤—Ç–æ–ø–æ—Å—Ç–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
    while True:
        schedule.run_pending()
        time.sleep(10)
